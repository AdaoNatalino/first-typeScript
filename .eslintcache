[{"C:\\Users\\adaoj\\dev\\flatiron\\labs\\POS\\TYPESCRIPT\\my-app\\src\\App.tsx":"1","C:\\Users\\adaoj\\dev\\flatiron\\labs\\POS\\TYPESCRIPT\\my-app\\src\\components\\QuestionCard.tsx":"2","C:\\Users\\adaoj\\dev\\flatiron\\labs\\POS\\TYPESCRIPT\\my-app\\src\\API.ts":"3","C:\\Users\\adaoj\\dev\\flatiron\\labs\\POS\\TYPESCRIPT\\my-app\\src\\utils.ts":"4"},{"size":1522,"mtime":1606157955518,"results":"5","hashOfConfig":"6"},{"size":777,"mtime":1606152211224,"results":"7","hashOfConfig":"6"},{"size":812,"mtime":1606157689311,"results":"8","hashOfConfig":"6"},{"size":92,"mtime":1606157703510,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},"1i47ain",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\adaoj\\dev\\flatiron\\labs\\POS\\TYPESCRIPT\\my-app\\src\\App.tsx",["19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34"],"import React, { ButtonHTMLAttributes, useState } from \"react\";\nimport QuestionCard from \"./components/QuestionCard\";\nimport { fetchQuizQuestions } from \"./API\";\nimport { QuestionsState, Difficulty } from \"./API\";\n\nconst TOTAL_QUESTIONS = 10;\n\ntype AnswerObject = {\n  question: string;\n  answer: string;\n  correct: boolean;\n  correct_answer: string;\n}\n\nconst App = () => {\n  const [loading, setLoading] = useState(false);\n  const [questions, setQuestions] = useState<QuestionsState[]>([]);\n  const [number, seNumber] = useState(0);\n  const [userAnswers, setUserAnswers] = useState<AnswerObject[]>([]);\n  const [score, setScore] = useState(0);\n  const [gameOver, setGameOver] = useState(true);\n\n  console.log(fetchQuizQuestions(TOTAL_QUESTIONS, Difficulty.EASY));\n\n  const startTrivia = () => {};\n\n  const checkAnswer = (e: React.MouseEvent<HTMLButtonElement>) => {};\n\n  const nextQuestion = () => {};\n\n  return (\n    <div className=\"App\">\n      <h1>React Quiz</h1>\n      <button className=\"start\"> Start Quiz</button>\n      <p className=\"score\"> Score: </p>\n      <p>Loading Questions...</p>\n      {/* <QuestionCard\n        questionNr={number + 1}\n        totalQuestions={TOTAL_QUESTIONS}\n        question={questions[number].question}\n        answer={questions[number].answer}\n        userAnswers={userAnswers ? userAnswers[number] : undefined}\n        callback={ checkAnswer}\n      /> */}\n      <button className=\"next\" onClick={nextQuestion}>\n        Next Question\n      </button>\n    </div>\n  );\n};\n\nexport default App;\n","C:\\Users\\adaoj\\dev\\flatiron\\labs\\POS\\TYPESCRIPT\\my-app\\src\\components\\QuestionCard.tsx",[],"C:\\Users\\adaoj\\dev\\flatiron\\labs\\POS\\TYPESCRIPT\\my-app\\src\\API.ts",[],"C:\\Users\\adaoj\\dev\\flatiron\\labs\\POS\\TYPESCRIPT\\my-app\\src\\utils.ts",[],{"ruleId":"35","severity":1,"message":"36","line":1,"column":17,"nodeType":"37","messageId":"38","endLine":1,"endColumn":37},{"ruleId":"35","severity":1,"message":"39","line":2,"column":8,"nodeType":"37","messageId":"38","endLine":2,"endColumn":20},{"ruleId":"35","severity":1,"message":"40","line":16,"column":10,"nodeType":"37","messageId":"38","endLine":16,"endColumn":17},{"ruleId":"35","severity":1,"message":"41","line":16,"column":19,"nodeType":"37","messageId":"38","endLine":16,"endColumn":29},{"ruleId":"35","severity":1,"message":"42","line":17,"column":10,"nodeType":"37","messageId":"38","endLine":17,"endColumn":19},{"ruleId":"35","severity":1,"message":"43","line":17,"column":21,"nodeType":"37","messageId":"38","endLine":17,"endColumn":33},{"ruleId":"35","severity":1,"message":"44","line":18,"column":10,"nodeType":"37","messageId":"38","endLine":18,"endColumn":16},{"ruleId":"35","severity":1,"message":"45","line":18,"column":18,"nodeType":"37","messageId":"38","endLine":18,"endColumn":26},{"ruleId":"35","severity":1,"message":"46","line":19,"column":10,"nodeType":"37","messageId":"38","endLine":19,"endColumn":21},{"ruleId":"35","severity":1,"message":"47","line":19,"column":23,"nodeType":"37","messageId":"38","endLine":19,"endColumn":37},{"ruleId":"35","severity":1,"message":"48","line":20,"column":10,"nodeType":"37","messageId":"38","endLine":20,"endColumn":15},{"ruleId":"35","severity":1,"message":"49","line":20,"column":17,"nodeType":"37","messageId":"38","endLine":20,"endColumn":25},{"ruleId":"35","severity":1,"message":"50","line":21,"column":10,"nodeType":"37","messageId":"38","endLine":21,"endColumn":18},{"ruleId":"35","severity":1,"message":"51","line":21,"column":20,"nodeType":"37","messageId":"38","endLine":21,"endColumn":31},{"ruleId":"35","severity":1,"message":"52","line":25,"column":9,"nodeType":"37","messageId":"38","endLine":25,"endColumn":20},{"ruleId":"35","severity":1,"message":"53","line":27,"column":9,"nodeType":"37","messageId":"38","endLine":27,"endColumn":20},"@typescript-eslint/no-unused-vars","'ButtonHTMLAttributes' is defined but never used.","Identifier","unusedVar","'QuestionCard' is defined but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'questions' is assigned a value but never used.","'setQuestions' is assigned a value but never used.","'number' is assigned a value but never used.","'seNumber' is assigned a value but never used.","'userAnswers' is assigned a value but never used.","'setUserAnswers' is assigned a value but never used.","'score' is assigned a value but never used.","'setScore' is assigned a value but never used.","'gameOver' is assigned a value but never used.","'setGameOver' is assigned a value but never used.","'startTrivia' is assigned a value but never used.","'checkAnswer' is assigned a value but never used."]